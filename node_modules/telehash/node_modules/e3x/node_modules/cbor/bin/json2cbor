#!/usr/bin/env node

var fs = require('fs');
var async = require('async');
var cbor = require('../lib/cbor');
var BufferStream = require('../lib/BufferStream');
var package = require('../package.json');

var opts = require('commander')
.version(package.version)
.usage('[options] <file ...>')
.option('-x, --hex', 'Hex string input')
.parse(process.argv)

var argv = opts.args
if (argv.length === 0) {
  argv = ['-'];
}

function convert(name, cb) {
  var stream = (name == '-') ? process.stdin : fs.createReadStream(name);

  var bs = new BufferStream();
  bs.on('error', cb);
  bs.on('finish', function() {
    var j = JSON.parse(bs.flatten());
    buf = cbor.Encoder.encode(j);
    if (opts.hex) {
      console.log(buf.toString('hex'));
    } else {
      process.stdout.write(buf);
    }
    cb();
  });
  stream.pipe(bs);
}

async.eachSeries(argv, convert, function(er) {
  if (er) {
    console.log("\n"+er);
  }
});
